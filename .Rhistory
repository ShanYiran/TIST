"#4e857e", "#6e282c", "#d293c8", "#393a2a", "#997579")
}else if(n <= 30){
colors <- c("#628bac", "#ceda3f", "#7e39c9", "#72d852", "#d849cc",
"#5e8f37", "#5956c8", "#cfa53f", "#392766", "#c7da8b",
"#8d378c", "#68d9a3", "#dd3e34", "#8ed4d5", "#d84787",
"#498770", "#c581d3", "#d27333", "#6680cb", "#83662e",
"#cab7da", "#364627", "#d16263", "#2d384d", "#e0b495",
"#4b272a", "#919071", "#7b3860", "#843028", "#bb7d91")
}else{
colors <- c("#982f29", "#5ddb53", "#8b35d6", "#a9e047", "#4836be",
"#e0dc33", "#d248d5", "#61a338", "#9765e5", "#69df96",
"#7f3095", "#d0d56a", "#371c6b", "#cfa738", "#5066d1",
"#e08930", "#6a8bd3", "#da4f1e", "#83e6d6", "#df4341",
"#6ebad4", "#e34c75", "#50975f", "#d548a4", "#badb97",
"#b377cf", "#899140", "#564d8b", "#ddb67f", "#292344",
"#d0cdb8", "#421b28", "#5eae99", "#a03259", "#406024",
"#e598d7", "#343b20", "#bbb5d9", "#975223", "#576e8b",
"#d97f5e", "#253e44", "#de959b", "#417265", "#712b5b",
"#8c6d30", "#a56c95", "#5f3121", "#8f846e", "#8f5b5c")
}
}else if(type == 3){
# colors <- c("#07a2a4", "#9a7fd1", "#588dd5", "#f5994e",
#             "#c05050", "#59678c", "#c9ab00", "#7eb00a")
colors <- c("#c14089", "#6f5553", "#E5C494", "#738f4c", "#bb6240",
"#66C2A5", "#2dfd29", "#0c0fdc")
}
if(!is.null(n)){
if(n <= length(colors)){
colors <- colors[1:n]
}else{
step <- 16777200 %/% (n - length(colors)) - 2
add.colors <- paste0("#", as.hexmode(seq(from = sample(1:step, 1),
by = step, length.out = (n-length(colors)))))
colors <- c(colors, add.colors)
}
}
return(colors)
}
getColors <- function(n){
if(n==6){
colors <- c("#cb7c77", "#68d359", "#6a7dc9", "#c9d73d", "#c555cb","#f5f5f5")
}
if(n==5){
colors <- c("#cb7c77", "#68d359", "#6a7dc9", "#c9d73d", "#f5f5f5")
}
if(n==7){
colors <- c("#cb7c77", "#68d359", "#6a7dc9", "#c9d73d", "#d7652d", "#7cd5c8", "#f5f5f5")
}
if(n>7){
colors <- c("#cb7c77", "#68d359", "#6a7dc9", "#c9d73d", "#f5f5f5","#c555cb",
"#d7652d", "#7cd5c8", "#c49a3f", "#507d41", "#5d8d9c",
"#90353b", "#674c2a", "#1B9E77", "#c5383c", "#0081d1",
"#ffd900", "#502e71", "#c8b693", "#aed688", "#f6a97a",
"#c6a5cc", "#798234", "#6b42c8", "#cf4c8b", "#666666",
"#feb308", "#ff1a1a", "#1aff1a", "#1a1aff", "#ffff1a")
}
return(colors)
}
col <- array(c("#f5f5f5",getDefaultColors(n = 400)))
col
install.packages("D:/Gu_lab/space_expr/code/TIST/TIST/TIST_1.0.0.zip", repos = NULL, type = "win.binary")
library(TIST)
options(stringsAsFactors = F )
library(plyr)
library(network)
library(tidygraph)
library(igraph)
library(ggraph)
library(scales)
library(STRINGdb)
library(Seurat)
library(progress)
library(lattice)
#library(tidyverse)
library(ggplot2)
library(Matrix)
#library(Rmisc)
library(ggforce)
library(VennDiagram)
library(rjson)
library(cowplot)
library(RColorBrewer)
library(grid)
library(sp)
#library(readbitmap)
library(ggExtra)
library(reshape2)
library(gridExtra)
library(sctransform)
library(pheatmap)
library(Hmisc)#???ذ?
library(magick)
library(imager)
library(seewave)
library(MASS)
library(NbClust)
library(clv)
library(SPARK)
library(parallel)
library(doParallel)
library(foreach)
library(pracma)
library(CompQuadForm)
library(philentropy)
library(data.table)
#cell interaction
library(CellChat)
library(ggplot2)
library(ggalluvial)
library(svglite)
library(Seurat)
library(mindr)
library(NMF)
library(xlsx)
library(matrixStats)
library(parallel)
library(ggpubr)
library(TIST)
library(CellChat)
options(stringsAsFactors = F )
library(TIST)
Maskfile <- "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/test_package_results/mask1.txt"
imagefile <- "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/spatial/tissue_hires_image.png"
savePath <- "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/test_package_results/"
spaceFile <- "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/spatial/tissue_positions_list.csv"
barcodefile = "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/spatial/Imginit/barcodes.tsv"
exprPath = "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/filtered_feature_bc_matrix/"
sacle_score <- 0.17011142
#img and seqRNA unsuper
print(Sys.time())
Spot_manifest_imgunsup <- Meta_St_img_unsupervised(Maskfile = Maskfile,
imagefile = imagefile,
spaceFile = spaceFile,
exprPath = exprPath,
colors = NULL,
savePath = savePath,
Method = "walktrap",
sacle_score = sacle_score)
library(plyr)
library(network)
library(tidygraph)
library(igraph)
library(ggraph)
library(scales)
library(STRINGdb)
library(Seurat)
library(progress)
library(lattice)
#library(tidyverse)
library(ggplot2)
library(Matrix)
#library(Rmisc)
library(ggforce)
library(VennDiagram)
library(rjson)
library(cowplot)
library(RColorBrewer)
library(grid)
library(sp)
#library(readbitmap)
library(ggExtra)
library(reshape2)
library(gridExtra)
library(sctransform)
library(pheatmap)
library(Hmisc)#???ذ?
library(magick)
library(imager)
library(seewave)
library(MASS)
library(NbClust)
library(clv)
library(SPARK)
library(parallel)
library(doParallel)
library(foreach)
library(pracma)
library(CompQuadForm)
library(philentropy)
library(data.table)
#cell interaction
library(CellChat)
library(ggplot2)
library(ggalluvial)
library(svglite)
library(Seurat)
library(mindr)
library(NMF)
library(xlsx)
library(matrixStats)
library(parallel)
library(ggpubr)
library(TIST)
library(CellChat)
Spot_manifest_imgunsup <- Meta_St_img_unsupervised(Maskfile = Maskfile,
imagefile = imagefile,
spaceFile = spaceFile,
exprPath = exprPath,
colors = NULL,
savePath = savePath,
Method = "walktrap",
sacle_score = sacle_score)
library("TIST", lib.loc="~/R/win-library/4.1")
remove.packages("TIST", lib="~/R/win-library/4.1")
install.packages("D:/Gu_lab/space_expr/code/TIST/TIST/TIST_1.0.0.zip", repos = NULL, type = "win.binary")
install.packages("D:/Gu_lab/space_expr/code/TIST/TIST/TIST_1.0.0.zip", repos = NULL, type = "win.binary")
library(TIST)
Maskfile <- "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/test_package_results/mask1.txt"
imagefile <- "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/spatial/tissue_hires_image.png"
savePath <- "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/test_package_results/"
spaceFile <- "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/spatial/tissue_positions_list.csv"
barcodefile = "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/spatial/Imginit/barcodes.tsv"
exprPath = "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/filtered_feature_bc_matrix/"
sacle_score <- 0.17011142
Spot_manifest_imgunsup <- Meta_St_img_unsupervised(Maskfile = Maskfile,
imagefile = imagefile,
spaceFile = spaceFile,
exprPath = exprPath,
colors = NULL,
savePath = savePath,
Method = "walktrap",
sacle_score = sacle_score)
##############reference################
getDefaultColors <- function(n = NULL, type = 1){
if(type == 1){
colors <- c("#cb7c77", "#68d359", "#6a7dc9", "#c9d73d", "#c555cb",
"#d7652d", "#7cd5c8", "#c49a3f", "#507d41", "#5d8d9c",
"#90353b", "#674c2a", "#1B9E77", "#c5383c", "#0081d1",
"#ffd900", "#502e71", "#c8b693", "#aed688", "#f6a97a",
"#c6a5cc", "#798234", "#6b42c8", "#cf4c8b", "#666666",
"#feb308", "#ff1a1a", "#1aff1a", "#1a1aff", "#ffff1a")
}else if(type == 2){
if(n <= 8){
colors <- c("#66C2A5", "#FC8D62", "#8DA0CB", "#E78AC3",
"#A6D854", "#FFD92F", "#E5C494", "#B3B3B3")
}else if(n <= 14){
colors <- c("#437BFE", "#FEC643", "#43FE69", "#FE6943", "#C643FE",
"#43D9FE", "#B87A3D", "#679966", "#993333", "#7F6699",
"#E78AC3", "#333399", "#A6D854", "#E5C494")
}
else if(n <= 20){
colors <- c("#87b3d4", "#d5492f", "#6bd155", "#683ec2", "#c9d754",
"#d04dc7", "#81d8ae", "#d34a76", "#607d3a", "#6d76cb",
"#ce9d3f", "#81357a", "#d3c3a4", "#3c2f5a", "#b96f49",
"#4e857e", "#6e282c", "#d293c8", "#393a2a", "#997579")
}else if(n <= 30){
colors <- c("#628bac", "#ceda3f", "#7e39c9", "#72d852", "#d849cc",
"#5e8f37", "#5956c8", "#cfa53f", "#392766", "#c7da8b",
"#8d378c", "#68d9a3", "#dd3e34", "#8ed4d5", "#d84787",
"#498770", "#c581d3", "#d27333", "#6680cb", "#83662e",
"#cab7da", "#364627", "#d16263", "#2d384d", "#e0b495",
"#4b272a", "#919071", "#7b3860", "#843028", "#bb7d91")
}else{
colors <- c("#982f29", "#5ddb53", "#8b35d6", "#a9e047", "#4836be",
"#e0dc33", "#d248d5", "#61a338", "#9765e5", "#69df96",
"#7f3095", "#d0d56a", "#371c6b", "#cfa738", "#5066d1",
"#e08930", "#6a8bd3", "#da4f1e", "#83e6d6", "#df4341",
"#6ebad4", "#e34c75", "#50975f", "#d548a4", "#badb97",
"#b377cf", "#899140", "#564d8b", "#ddb67f", "#292344",
"#d0cdb8", "#421b28", "#5eae99", "#a03259", "#406024",
"#e598d7", "#343b20", "#bbb5d9", "#975223", "#576e8b",
"#d97f5e", "#253e44", "#de959b", "#417265", "#712b5b",
"#8c6d30", "#a56c95", "#5f3121", "#8f846e", "#8f5b5c")
}
}else if(type == 3){
# colors <- c("#07a2a4", "#9a7fd1", "#588dd5", "#f5994e",
#             "#c05050", "#59678c", "#c9ab00", "#7eb00a")
colors <- c("#c14089", "#6f5553", "#E5C494", "#738f4c", "#bb6240",
"#66C2A5", "#2dfd29", "#0c0fdc")
}
if(!is.null(n)){
if(n <= length(colors)){
colors <- colors[1:n]
}else{
step <- 16777200 %/% (n - length(colors)) - 2
add.colors <- paste0("#", as.hexmode(seq(from = sample(1:step, 1),
by = step, length.out = (n-length(colors)))))
colors <- c(colors, add.colors)
}
}
return(colors)
}
col <- array(c("#f5f5f5",getDefaultColors(n = 400)))
co.
col
if(!is.null(colors)){
col <- colors
rownames(col) <- c(1:length(colors))
}
options(stringsAsFactors = F )
library(plyr)
library(network)
library(tidygraph)
library(igraph)
library(ggraph)
library(scales)
library(STRINGdb)
library(Seurat)
library(progress)
library(lattice)
#library(tidyverse)
library(ggplot2)
library(Matrix)
#library(Rmisc)
library(ggforce)
library(VennDiagram)
library(rjson)
library(cowplot)
library(RColorBrewer)
library(grid)
library(sp)
#library(readbitmap)
library(ggExtra)
library(reshape2)
library(gridExtra)
library(sctransform)
library(pheatmap)
library(Hmisc)#???ذ?
library(magick)
library(imager)
library(seewave)
library(MASS)
library(NbClust)
library(clv)
library(SPARK)
library(parallel)
library(doParallel)
library(foreach)
library(pracma)
library(CompQuadForm)
library(philentropy)
library(data.table)
#cell interaction
library(CellChat)
library(ggplot2)
library(ggalluvial)
library(svglite)
library(Seurat)
library(mindr)
library(NMF)
library(xlsx)
library(matrixStats)
library(parallel)
library(ggpubr)
library(TIST)
library(CellChat)
OUT_PATH = "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/other_method/steel/"
tm <- read.table(paste0(OUT_PATH,".map.20"),header = T)
head(tm)
tm$Cluster <- as.character(tm$Cluster)
col <- array(c("#f5f5f5",getDefaultColors(n = 400)))
rownames(col) <- c(0,1:400)
spaceFile <- "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/spatial/tissue_positions_list.csv"
Spot_space <- read.csv(file = spaceFile,header = F)
sel.cols <- c("barcode","tissue", "row", "col", "imagerow", "imagecol")
colnames(Spot_space) <- sel.cols
tm <- merge(tm,Spot_space, tm, by.x = "Bead",by.y = "barcode")
head(tm)
write.csv(tm,"D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/nother_method/steel.csv")
write.csv(tm,file = "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/nother_method/steel.csv")
write.csv(tm,file = "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/other_method/steel.csv")
options(stringsAsFactors = F )
library(plyr)
library(network)
library(tidygraph)
library(igraph)
library(ggraph)
library(scales)
library(STRINGdb)
library(Seurat)
library(progress)
library(lattice)
#library(tidyverse)
library(ggplot2)
library(Matrix)
#library(Rmisc)
library(ggforce)
library(VennDiagram)
library(rjson)
library(cowplot)
library(RColorBrewer)
library(grid)
library(sp)
#library(readbitmap)
library(ggExtra)
library(reshape2)
library(gridExtra)
library(sctransform)
library(pheatmap)
library(Hmisc)#???ذ?
library(magick)
library(imager)
library(seewave)
library(MASS)
library(NbClust)
library(clv)
library(SPARK)
library(parallel)
library(doParallel)
library(foreach)
library(pracma)
library(CompQuadForm)
library(philentropy)
library(data.table)
#cell interaction
library(CellChat)
library(ggplot2)
library(ggalluvial)
library(svglite)
library(Seurat)
library(mindr)
library(NMF)
library(xlsx)
library(matrixStats)
library(parallel)
library(ggpubr)
library(TIST)
library(CellChat)
library(BayesSpace)
options(stringsAsFactors = F )
library(plyr)
library(network)
library(tidygraph)
library(igraph)
library(ggraph)
library(scales)
library(STRINGdb)
library(Seurat)
library(progress)
library(lattice)
#library(tidyverse)
library(ggplot2)
library(Matrix)
#library(Rmisc)
library(ggforce)
library(VennDiagram)
library(rjson)
library(cowplot)
library(RColorBrewer)
library(grid)
library(sp)
#library(readbitmap)
library(ggExtra)
library(reshape2)
library(gridExtra)
library(sctransform)
library(pheatmap)
library(Hmisc)#???ذ?
library(magick)
library(imager)
library(seewave)
library(MASS)
library(NbClust)
library(clv)
library(SPARK)
library(parallel)
library(doParallel)
library(foreach)
library(pracma)
library(CompQuadForm)
library(philentropy)
library(data.table)
#cell interaction
library(CellChat)
library(ggplot2)
library(ggalluvial)
library(svglite)
library(Seurat)
library(mindr)
library(NMF)
library(xlsx)
library(matrixStats)
library(parallel)
library(ggpubr)
library(TIST)
library(CellChat)
library(BayesSpace)
seo<-Seurat::Load10X_Spatial("D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/")
plot1 <- Seurat::VlnPlot(seo, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- Seurat::SpatialFeaturePlot(seo, features = "nCount_Spatial") + theme(legend.position = "right")
seo <- Seurat::SCTransform(seo, assay = "Spatial", return.only.var.genes = FALSE, verbose = FALSE)
seo <- Seurat::RunPCA(seo, assay = "SCT", verbose = FALSE)
seo <- Seurat::FindNeighbors(seo, reduction = "pca", dims = 1:30)
seo <- Seurat::FindClusters(seo, verbose = FALSE)
seo <- Seurat::RunUMAP(seo, reduction = "pca", dims = 1:30)
p1 <- Seurat::DimPlot(seo, reduction = "umap", label = TRUE)
p2 <- Seurat::SpatialDimPlot(seo, label = TRUE, label.size = 3)
plot_grid(p1, p2)
set.seed(1314)
?spatialPreprocess
sce <- readVisium("D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/")
sce <- scater::logNormCounts(sce)
sce <- spatialPreprocess(sce, platform="Visium",
n.PCs=7, n.HVGs=2000, log.normalize=FALSE)
sce <- qTune(sce, qs=seq(2, 10), platform="Visium", d=7)
qPlot(sce)
sce <- spatialCluster(sce, q=20, platform="Visium", d=7,
init.method="mclust", model="t", gamma=2,
nrep=1000, burn.in=100,    #  nrep建议大于10000 ，奈何我们为了演示只能牺牲点了
save.chain=TRUE)
p3 <-SpatialDimPlot(seo, label = T, label.size = 3)+ ggtitle("Seurat")
p4 <- clusterPlot(sce,label = "spatial.cluster" )+ ggtitle("BayesSpace")
plot_grid(p3, p4)
head(sce)
sce
head(sce$spot)
head(sce$spatial.cluster)
write.csv(df,file = "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/other_method/byesspace.csv")
df
df <- data.frame(barcode = sce$spot, cluster = sce$spatial.cluster)
df
write.csv(df,file = "D:/Gu_lab/space_expr/data/pubdata/V1_Adult_Mouse_Brain/other_method/byesspace.csv")
